{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.js","components/Phonebook/Phonebook.js","components/Filter/Filter.js","App.js","index.js","components/Phonebook/Phonebook.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","idName","uuid","idNumber","handleChange","e","target","value","setState","handleSubmit","preventDefault","newContact","id","props","addNewContact","resetForm","this","className","styles","form","onSubmit","form_name","htmlFor","form_input","type","onChange","pattern","title","required","form_btn","Component","Phonebook","contacts","onDeleteContact","contact_list","map","contact_item","contact_name","contact_delate_btn","onClick","Filter","App","filter","find","contact","alert","prevState","changeFilter","getVisibleContacts","normalizedFilter","toLocaleLowerCase","includes","deleteContact","contactId","findContact","localContacts","localStorage","getItem","parseLocalContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","React","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4fdaf09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__WR5Wq\",\"form_name\":\"Form_form_name__30igB\",\"form_input\":\"Form_form_input__26eho\",\"form_btn\":\"Form_form_btn__1zcn2\"};","import React from 'react';\nimport { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport styles from '../Form/Form.module.css';\n\nexport class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  idName = uuid();\n  idNumber = uuid();\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n      //   [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    const newContact = {\n      name,\n      number,\n      id: uuid(),\n    };\n\n    this.props.addNewContact(newContact);\n\n    this.resetForm();\n  };\n\n  resetForm = () => {\n    // this.setState({...this.state});\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label className={styles.form_name} htmlFor={this.idName}>\n          Name\n        </label>\n        <input\n          className={styles.form_input}\n          id={this.idName}\n          name=\"name\"\n          value={name}\n          type=\"text\"\n          onChange={this.handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <label className={styles.form_name} htmlFor={this.idNumber}>\n          Number\n        </label>\n        <input\n          className={styles.form_input}\n          id={this.idNumber}\n          name=\"number\"\n          value={number}\n          type=\"text\"\n          onChange={this.handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <button className={styles.form_btn} type=\"submit\">\n          Add\n        </button>\n      </form>\n    );\n  }\n}\n\n\n","import React from 'react';\nimport styles from '../Phonebook/Phonebook.module.css';\n\nconst Phonebook = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.contact_list}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={styles.contact_item} key={id}>\n        <p className={styles.contact_name}>{name}:</p>\n        <p>{number}</p>\n        <button\n          className={styles.contact_delate_btn}\n          onClick={() => onDeleteContact(id)}\n        >\n          Удалить\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Phonebook;\n","import React from 'react';\nimport styles from '../Filter/Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.form_name}>\n    Find contacts by name\n    <input\n      className={styles.form_input}\n      //  id={this.idFilter }\n      name=\"filter\"\n      value={value}\n      type=\"text\"\n      onChange={onChange}\n      //  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      //  title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n      required\n    />\n  </label>\n);\n\nexport default Filter;\n\n// export class Filter extends Component{\n//   state = {\n//    filter: ''\n//   };\n// idFilter = uuid();\n\n//     handleChange = e => {\n//     const { name, value } = e.target;\n//       this.setState({\n//        [name]: value,\n//       });\n//       console.log(this.state.filter);\n//     //      const {name} =  this.state\n//     // const findContact = {\n//     //   name\n//     // };\n//   // console.log('kjh');\n//       // this.props.filterContacts(value);\n//           this.props.filterContacts(this.state.filter);\n//   };\n\n//     render() {\n//          const { filter} = this.state;\n//       return (<div>\n//           <label>Find contacts by name\n\n//            <input\n//        id={this.idFilter }\n//        name=\"filter\"\n//        value={filter}\n//        type=\"text\"\n//        onChange={this.handleChange}\n//        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//        required\n//        /></label></div>\n//          )\n//      }\n\n// }\n\n// <p>Find contacts by name</p>\n\n//   <label htmlFor={this.idName}>Name</label>\n//       <input\n//         id={this.idName}\n//         name=\"name\"\n//         value={this.state.name}\n//         type=\"text\"\n//         onChange={this.handleChange}\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n//         required\n//       />\n","import React from 'react';\nimport './App.css';\nimport { Form } from './components/Form/Form';\nimport Phonebook from './components/Phonebook/Phonebook';\nimport Filter from './components/Filter/Filter';\n\nclass App extends React.Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const localContacts = localStorage.getItem('contacts');\n    const parseLocalContacts = JSON.parse(localContacts);\n    if (parseLocalContacts) {\n      this.setState({ contacts: parseLocalContacts });\n    }\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addNewContact = newContact => {\n    this.state.contacts.find(contact => contact.name === newContact.name)\n      ? alert(`${newContact.name} already exists`)\n      : this.setState(prevState => {\n          return {\n            contacts: [...prevState.contacts, newContact],\n          };\n        });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    const normalizedFilter = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  findContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    const visibleContacts = this.getVisibleContacts();\n    // console.log(this.state.name, this.state.number);\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <Form addNewContact={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <Phonebook\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact_list\":\"Phonebook_contact_list__1QJDO\",\"contact_item\":\"Phonebook_contact_item__2HbzQ\",\"contact_name\":\"Phonebook_contact_name__i2AMI\",\"contact_delate_btn\":\"Phonebook_contact_delate_btn__3IB_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_name\":\"Filter_form_name__WIocL\",\"form_input\":\"Filter_form_input__CrX9O\"};"],"sourceRoot":""}